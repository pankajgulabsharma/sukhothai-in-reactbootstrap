{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kesari/Documents/sukhothaiinreactbootstrap/components/card-slider/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport Link from \"next/link\";\nimport dynamic from \"next/dynamic\";\nimport styles from \"./index.module.scss\";\nconst DynamicImage = dynamic(() => import(\"../custom-image\"), /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"...loading\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this));\n\nconst CardSliderPanel = ({\n  data,\n  title,\n  content\n}) => {\n  const sliderConfig = {\n    dots: false,\n    arrows: true,\n    infinite: true,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    speed: 500,\n    adaptiveHeight: true,\n    autoplay: true,\n    autoplaySpeed: 2200,\n    responsive: [{\n      breakpoint: 991,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2\n      }\n    }, {\n      breakpoint: 575,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-heading-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"block-title block-title--with-border text-center\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center mb-0\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, _objectSpread(_objectSpread({\n        className: \"health-benefit-carousel\"\n      }, sliderConfig), {}, {\n        children: data === null || data === void 0 ? void 0 : data.map((cardData, index) => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"card card--img-animation h-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-img-top\",\n            children: /*#__PURE__*/_jsxDEV(DynamicImage, {\n              src: cardData.image,\n              alt: cardData.altText,\n              className: \"h-100 w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: cardData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: cardData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/benefits\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"btn btn-primary\",\n              children: \"Read All Benefits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default CardSliderPanel;","map":{"version":3,"sources":["/home/kesari/Documents/sukhothaiinreactbootstrap/components/card-slider/index.js"],"names":["Row","Col","Card","PropTypes","Slider","Link","dynamic","styles","DynamicImage","CardSliderPanel","data","title","content","sliderConfig","dots","arrows","infinite","slidesToShow","slidesToScroll","speed","adaptiveHeight","autoplay","autoplaySpeed","responsive","breakpoint","settings","map","cardData","index","image","altText","name","description"],"mappings":"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","sourcesContent":["import { Row, Col, Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport Link from \"next/link\";\nimport dynamic from \"next/dynamic\";\n\nimport styles from \"./index.module.scss\";\n\nconst DynamicImage = dynamic(\n  () => import(\"../custom-image\"),\n  <div>...loading</div>\n);\n\nconst CardSliderPanel = ({ data, title, content }) => {\n  const sliderConfig = {\n    dots: false,\n    arrows: true,\n    infinite: true,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    speed: 500,\n    adaptiveHeight: true,\n    autoplay: true,\n    autoplaySpeed: 2200,\n    responsive: [\n      {\n        breakpoint: 991,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2\n        }\n      },\n      {\n        breakpoint: 575,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  };\n\n  return (\n    <>\n      <section className=\"section-block\">\n        <div className=\"block-heading-box\">\n          <h2 className=\"block-title block-title--with-border text-center\">\n            {title}\n          </h2>\n          <p className=\"text-center mb-0\">{content}</p>\n        </div>\n        <Slider className=\"health-benefit-carousel\" {...sliderConfig}>\n          {data?.map((cardData, index) => (\n            <Card className=\"card card--img-animation h-100\" key={index}>\n              <div className=\"card-img-top\">\n                <DynamicImage\n                  src={cardData.image}\n                  alt={cardData.altText}\n                  className=\"h-100 w-100\"\n                />\n              </div>\n              <Card.Body>\n                <Card.Title>{cardData.name}</Card.Title>\n                <Card.Text>{cardData.description}</Card.Text>\n              </Card.Body>\n            </Card>\n          ))}\n        </Slider>\n        <Row className=\"mt-5\">\n          <Col md={12} className=\"text-center\">\n            <Link href=\"/benefits\">\n              <a className=\"btn btn-primary\">Read All Benefits</a>\n            </Link>\n          </Col>\n        </Row>\n      </section>\n    </>\n  );\n};\n\nexport default CardSliderPanel;\n"]},"metadata":{},"sourceType":"module"}