{"ast":null,"code":"import _regeneratorRuntime from \"/home/kesari/Documents/sukhothaiinreactbootstrap/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kesari/Documents/sukhothaiinreactbootstrap/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/kesari/Documents/sukhothaiinreactbootstrap/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nvar useForm = function useForm() {\n  _s();\n\n  var _useState = useState({\n    location: {\n      lat: null,\n      lng: null\n    },\n    distance: 10,\n    results: 25\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      loc = _useState3[0],\n      setLoc = _useState3[1];\n\n  function handleLocation(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      location: e\n    }));\n  }\n\n  function handleAddressChange(e) {\n    setAddress(e);\n  }\n\n  function handleLocationSelect(e) {\n    geocodeByAddress(e).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(results) {\n        var newAddress;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                newAddress = results[0].formatted_address.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").split(\" \").slice(0, 2).join(\" \");\n                _context.next = 3;\n                return handleAddressChange(newAddress);\n\n              case 3:\n                return _context.abrupt(\"return\", getLatLng(results[0]));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(latLng) {\n        var newValues;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                newValues = _objectSpread(_objectSpread({}, values), {}, {\n                  location: latLng\n                });\n                _context2.next = 3;\n                return setValues(newValues);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }())[\"catch\"](function (error) {\n      return console.error('Error', error);\n    });\n  }\n\n  function handleSelect(e) {\n    // dropdown\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, parseInt(value))));\n  }\n\n  return {\n    values: values,\n    address: address,\n    handleAddressChange: handleAddressChange,\n    handleLocationSelect: handleLocationSelect,\n    handleSelect: handleSelect,\n    handleLocation: handleLocation\n  };\n};\n\n_s(useForm, \"T928myAdSrEn+hFkTJ7zFVsU2HU=\");\n\nexport default useForm;","map":{"version":3,"sources":["/home/kesari/Documents/sukhothaiinreactbootstrap/pages/home/useForm.js"],"names":["useState","geocodeByAddress","getLatLng","useForm","location","lat","lng","distance","results","values","setValues","address","setAddress","loc","setLoc","handleLocation","e","handleAddressChange","handleLocationSelect","then","newAddress","formatted_address","replace","split","slice","join","latLng","newValues","error","console","handleSelect","target","name","value","parseInt"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,2BAA5C;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBAEUH,QAAQ,CAAC;AACjCI,IAAAA,QAAQ,EAAE;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,GAAG,EAAE;AAAjB,KADuB;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,OAAO,EAAE;AAHwB,GAAD,CAFlB;AAAA,MAEXC,MAFW;AAAA,MAEHC,SAFG;;AAAA,mBAQYV,QAAQ,CAAC,EAAD,CARpB;AAAA,MAQXW,OARW;AAAA,MAQFC,UARE;;AAAA,mBAUIZ,QAAQ,CAAC,EAAD,CAVZ;AAAA,MAUXa,GAVW;AAAA,MAUNC,MAVM;;AAYlB,WAASC,cAAT,CAAwBC,CAAxB,EAA0B;AACtBN,IAAAA,SAAS,iCAAKD,MAAL;AAAaL,MAAAA,QAAQ,EAAEY;AAAvB,OAAT;AACH;;AAED,WAASC,mBAAT,CAA6BD,CAA7B,EAA+B;AAC3BJ,IAAAA,UAAU,CAACI,CAAD,CAAV;AACH;;AAED,WAASE,oBAAT,CAA8BF,CAA9B,EAAgC;AAC5Bf,IAAAA,gBAAgB,CAACe,CAAD,CAAhB,CACKG,IADL;AAAA,0EACU,iBAAMX,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACIY,gBAAAA,UADJ,GACiBZ,OAAO,CAAC,CAAD,CAAP,CAAWa,iBAAX,CACZC,OADY,CACJ,8BADI,EAC2B,EAD3B,EAEZC,KAFY,CAEN,GAFM,EAGZC,KAHY,CAGN,CAHM,EAGH,CAHG,EAIZC,IAJY,CAIP,GAJO,CADjB;AAAA;AAAA,uBAMIR,mBAAmB,CAACG,UAAD,CANvB;;AAAA;AAAA,iDAOKlB,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAPd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADV;;AAAA;AAAA;AAAA;AAAA,SAUKW,IAVL;AAAA,2EAUU,kBAAMO,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,gBAAAA,SADJ,mCAEKlB,MAFL;AAGEL,kBAAAA,QAAQ,EAAEsB;AAHZ;AAAA;AAAA,uBAKIhB,SAAS,CAACiB,SAAD,CALb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVV;;AAAA;AAAA;AAAA;AAAA,kBAiBW,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAAJ;AAAA,KAjBhB;AAkBH;;AAED,WAASE,YAAT,CAAsBd,CAAtB,EAAwB;AAAE;AAAF,oBACIA,CAAC,CAACe,MADN;AAAA,QACZC,IADY,aACZA,IADY;AAAA,QACNC,KADM,aACNA,KADM;AAEpBvB,IAAAA,SAAS,iCAAKD,MAAL,2BAAcuB,IAAd,EAAqBE,QAAQ,CAACD,KAAD,CAA7B,GAAT;AACH;;AAED,SAAO;AACHxB,IAAAA,MAAM,EAANA,MADG;AAEHE,IAAAA,OAAO,EAAPA,OAFG;AAGHM,IAAAA,mBAAmB,EAAnBA,mBAHG;AAIHC,IAAAA,oBAAoB,EAApBA,oBAJG;AAKHY,IAAAA,YAAY,EAAZA,YALG;AAMHf,IAAAA,cAAc,EAAdA;AANG,GAAP;AAQH,CAtDD;;GAAMZ,O;;AAwDN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nconst useForm = () => {\n\n    const [values, setValues] = useState({\n        location: {lat: null, lng: null},\n        distance: 10,\n        results: 25\n    });\n\n    const [address, setAddress] = useState(\"\");\n\n    const [loc, setLoc] = useState(\"\");\n    \n    function handleLocation(e){\n        setValues({...values, location: e});\n    }\n    \n    function handleAddressChange(e){\n        setAddress(e);\n    }\n\n    function handleLocationSelect(e){\n        geocodeByAddress(e)\n            .then(async results => {\n                const newAddress = results[0].formatted_address\n                      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\")\n                      .split(\" \")\n                      .slice(0, 2)\n                      .join(\" \");\n                await handleAddressChange(newAddress);\n                return getLatLng(results[0]);\n            })\n            .then(async latLng => {\n                const newValues = {\n                    ...values,\n                    location: latLng,\n                };\n                await setValues(newValues);\n            })\n            .catch(error => console.error('Error', error));\n    }\n\n    function handleSelect(e){ // dropdown\n        const { name, value } = e.target;\n        setValues({...values, [name]: parseInt(value)});\n    }\n\n    return {\n        values,\n        address,\n        handleAddressChange,\n        handleLocationSelect,\n        handleSelect,\n        handleLocation\n    };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}